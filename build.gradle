plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

repositories {
maven { url 'https://jitpack.io' }
jcenter()
maven { url "https://maven.shedaniel.me/" }
maven { url "https://maven.terraformersmc.com/releases/"}
maven { url "https://dvs1.progwml6.com/files/maven" }
maven { url "https://maven.architectury.dev/" }
maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	
	modImplementation("com.terraformersmc:modmenu:4.0.6") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	
	modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:${project.rei_version}"){
		exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "me.shedaniel.cloth")
        exclude(group: "dev.architectury")
    }
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin:${project.rei_version}") {
       exclude(group: "net.fabricmc.fabric-api")
       exclude(group: "me.shedaniel.cloth")
       exclude(group: "dev.architectury")
    }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "me.shedaniel.cloth")
        exclude(group: "dev.architectury")
    }
    modImplementation("dev.architectury:architectury-fabric:6.2.43")
    modImplementation "dev.emi:trinkets:3.4.1"
    modImplementation "dev.emi:emi:0.5.0+1.19.2"
}

loom {
	accessWidenerPath = file("src/main/resources/tomsstorage.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
		def mavenURL = System.getProperty("mavenDir")
		if ("${mavenURL}" != "null") {
			maven {
				url = file(mavenURL)
			}
		}
	}
}
